name: Issue Dependency Cycle Gate

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  issues: read
  contents: read

env:
  # Grace Flag: 1 = Enforcement aktiv (Fail bei Zyklen), 0 = nur Warnung
  CYCLE_ENFORCE: 1

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Scan for dependency cycles
        id: analyze
        uses: actions/github-script@v8
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const enforce = process.env.CYCLE_ENFORCE !== '0';
            const { collectDependencyCycles, writeCycleArtifacts } = require('./scripts/github/dependency-cycles.js');

            const { cycles } = await collectDependencyCycles(github, owner, repo, { state: 'open', limit: 20 });
            writeCycleArtifacts(cycles, { prefix: 'cycles', limit: 20 });

            core.setOutput('cycle-count', cycles.length);
            core.setOutput('has-cycles', cycles.length > 0);

            if (!cycles.length) {
              core.info('No dependency cycles detected.');
              return;
            }

            if (enforce) {
              core.notice(`Dependency cycle enforcement aktiv – ${cycles.length} Zyklus/Zyklen gefunden.`);
            } else {
              core.info(`Dependency cycles gefunden (${cycles.length}), Enforcement deaktiviert.`);
            }

      - name: Upload cycle artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-cycles
          path: |
            cycles.json
            cycles.mmd

      - name: Fail on dependency cycles
        if: env.CYCLE_ENFORCE != '0'
        run: |
          COUNT=${{ steps.analyze.outputs['cycle-count'] }}
          if [ "$COUNT" -gt 0 ]; then
            echo "Neue Dependency Cycles erkannt – PR blockiert." >&2
            exit 1
          fi
          echo "Keine Dependency Cycles gefunden – PR frei." 

      - name: Summary
        if: always()
        run: |
          echo "### Dependency Cycle Scan" >> $GITHUB_STEP_SUMMARY
          echo "Event: $GITHUB_EVENT_NAME" >> $GITHUB_STEP_SUMMARY
          echo "Zyklen: ${{ steps.analyze.outputs['cycle-count'] }}" >> $GITHUB_STEP_SUMMARY
          echo "Enforcement: $CYCLE_ENFORCE" >> $GITHUB_STEP_SUMMARY
